basePath: /api/v1
definitions:
  model.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.SendEmail:
    properties:
      email:
        type: string
    type: object
  model.UpdatePasswordWithOldPassword:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  model.UpdateUser:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.User:
    properties:
      avarar_url:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:1234
info:
  contact: {}
  description: This is go-gcs
  title: go-gcs
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: 用户登录接口，传入用户名和密码，返回 JWT Token
      parameters:
      - description: 登录请求体
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回 token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求参数格式错误
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 用户名或密码错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 用户登录
      tags:
      - 用户认证
  /users/create:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功返回用户信息
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create user
      tags:
      - Users
  /users/get-email-verification-code:
    post:
      description: get an email verification code
      parameters:
      - description: the struct for Sending Verification Code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SendEmail'
      responses: {}
      summary: get an email verification code
      tags:
      - Users
  /users/update:
    post:
      description: update user information
      parameters:
      - description: struct for update user
        in: body
        name: UpdateUser
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUser'
      - description: Authorization token (Bearer <token>)
        in: header
        name: Authorization
        required: true
        type: string
      responses: {}
      summary: update user information
      tags:
      - Users
  /users/update-password-with-email-verification-code:
    post:
      description: update password with email verification code
      parameters:
      - description: struct for update password
        in: body
        name: UpdatePasswordWithOldPassword
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePasswordWithOldPassword'
      responses: {}
      summary: Reset password
      tags:
      - Users
  /users/update-password-with-old-password:
    post:
      description: update password with old password
      parameters:
      - description: Authorization token (Bearer <token>)
        in: header
        name: Authorization
        required: true
        type: string
      responses: {}
      summary: update password
      tags:
      - Users
schemes:
- http
- //
- 支持的协议
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
