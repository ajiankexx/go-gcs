basePath: /api/v1
definitions:
  model.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.User:
    properties:
      avarar_url:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:1234
info:
  contact: {}
  description: This is go-gcs
  title: go-gcs
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: 用户登录接口，传入用户名和密码，返回 JWT Token
      parameters:
      - description: 登录请求体
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回 token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 请求参数格式错误
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 用户名或密码错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 用户登录
      tags:
      - 用户认证
  /users/create:
    post:
      consumes:
      - application/json
      description: 创建一个新用户，包含用户名、邮箱、密码和头像链接
      parameters:
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功返回用户信息
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: 请求参数错误
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 服务器内部错误
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 创建用户
      tags:
      - 用户模块
schemes:
- http
- //
- 支持的协议
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
